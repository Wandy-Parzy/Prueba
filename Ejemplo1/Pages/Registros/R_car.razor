@page "/R_car"
@page "/R_car/{CarId:int}"

@inject CarBLL carBLL
@inject NotificationService notificacion

<EditForm Model="car" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="rz-border-radius-4 shadow d-block p-2 border border-4 bg-white">
        <div class="rz-border-radius-4 shadow card-header text-center">
            <h3>Registro de autos</h3>
        </div>

        <div class="rz-border-radius-4 shadow border border-4 card card-body">
            <div class="container overflow-hidden">
                <form class="row gy-3">
                    <div class="form-row align-items-center">
                        @*CarId*@
                            <div class="col-ms">
                                <label>ClienteId</label>
                                <div class="input-group mb-3">
                                    <InputNumber @bind-Value="car.CarId"
                                        class="rz-border-radius-4 shadow form-control" />
                                    <div class="input-group-append">
                                        <div class="input-group-append">
                                            <button type="button"
                                                class="rz-border-radius-4 shadow form-control col-4 btn btn-primary  "
                                                @onclick="Buscar">Buscar</button>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            @*Marca*@
                            <div class="col-ms">
                                <label>Marca </label>
                                <InputText @bind-Value="car.Marca" placeholder="Ingrese la marca del vehiculo"
                                    class="rz-border-radius-4 shadow form-control" />
                                <ValidationMessage For="@(() => car.Marca)" />
                            </div>

                            @*Modelo*@
                            <div class="col-ms">
                                <label>Modelo </label>
                                <InputText @bind-Value="car.Modelo" placeholder="Ingrese el modelo del vehiculo"
                                    class="rz-border-radius-4 shadow form-control" />
                                <ValidationMessage For="@(() => car.Modelo)" />
                            </div>

                            @*Matricula*@
                            <div class="col-ms">
                                <label>Matricula </label>
                                <InputText @bind-Value="car.Matricula" placeholder="Ingrese la matricula del vehiculo"
                                    class="rz-border-radius-4 shadow form-control" />
                                <ValidationMessage For="@(() => car.Matricula)" />
                            </div>

                            <div class="col-ms">
                                <label>Precio </label>
                                <InputNumber @bind-Value="car.Precio" placeholder="Ingrese el precio del vehiculo"
                                    class="rz-border-radius-4 shadow form-control" />
                                <ValidationMessage For="@(() => car.Precio)" />
                            </div>

                            @*Fecha*@
                            <div class="col-ms">
                                <label>Fecha</label>
                                <InputDate @bind-Value="car.Fecha" class="form-control" />
                                <ValidationMessage For="@(() => car.Fecha)" />
                            </div>

                            @*Descripcion*@
                            <div class="col-ms">
                                <label>Descripción </label>
                                <InputText @bind-Value="car.Descripcion" placeholder="Ingrese una descripción"
                                    class="rz-border-radius-4 shadow form-control" />
                                <ValidationMessage For="@(() => car.Descripcion)" />
                            </div>
                        </div>
                </form>
            </div>


            <div class="card-footer">
                <div class="mb-3 text-center" display: inline-block>
                    <button type="button" class="rz-border-radius-4 btn btn-primary btn-lg" @onclick="Nuevo">
                        <i class="oi oi-document" /> Nuevo
                    </button>
                    <button type="submit" class="rz-border-radius-4 btn btn-success btn-lg">
                        <i class="bi bi-save-fill" /> Guardar
                    </button>
                    <button type="button" class="rz-border-radius-4 btn btn-danger btn-lg" @onclick="Eliminar">
                        <i class="oi oi-trash" /> Eliminar
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int CarId { get; set; }

    public Car car { get; set; } = new Car();

    public List<Car> lista { get; set; } = new List<Car>();

    protected override void OnInitialized()
    {
        if (CarId > 0)
        {
            this.car.CarId = CarId;
            this.Buscar();
            this.car.Fecha = DateTime.Now;
        }
    }

    public void Nuevo()
    {
        car = new Car();
    }

    bool Validar()
    {
        return car.Descripcion.Contains(".");
    }

    public void Guardar()
    {

        bool guardado = carBLL.Guardar(car);

        if (guardado)
        {
            Nuevo();
            notificacion.ShowNotification("Guardado correctamente.");
        }
        else
        {
            notificacion.ShowNotification("No fue guardado.", NotificationSeverity.Error);
        }

    }
    private void Buscar()
    {
        if (car.CarId > 0)
        {
            var encontrado = carBLL.Buscar(car.CarId);

            if (encontrado != null)
            {
                this.car = encontrado;
                notificacion.ShowNotification("Registro encontrado", NotificationSeverity.Success);
            }
            else
            {
                notificacion.ShowNotification("Registro no encontrado", NotificationSeverity.Warning);
            }
        }
    }
    public void Eliminar()
    {

        var elimino = carBLL.Eliminacion(car);
        if (elimino)
        {
            Nuevo();
            notificacion.ShowNotification("Eliminado correctamente.");
        }
        else
        {
            notificacion.ShowNotification("No fue eliminado.", NotificationSeverity.Error);
        }
    }

}